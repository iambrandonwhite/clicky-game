{"version":3,"sources":["components/Container/index.js","components/Row/index.js","components/ScoreCounter/index.js","components/Navbar/index.js","components/Jumbotron/index.js","components/GameCard/index.js","components/Footer/index.js","App.js","index.js"],"names":["Container","_ref","children","react_default","a","createElement","className","Row","ScoreCounter","props","score","highScore","Navbar","href","message","components_ScoreCounter","Jumbotron","GameCard","onClick","isClicked","id","alt","name","src","image","Footer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","currentStateCards","state","cards","newCardArr","clicked","setState","resetGame","i","push","incrementScore","checkWin","alert","getInitialCharacterSet","initialState","characters","map","character","_this2","components_Navbar","components_Jumbotron","components_Container","components_Row","components_GameCard","key","components_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f19f4689.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container({children}) {\n    return (\n        <div className=\"container-fluid\">\n            {children}\n        </div>\n    );\n}\n\nexport default Container;","import React from \"react\";\n\nfunction Row({children}) {\n    return (\n        <div className=\"row\">\n            {children}\n        </div>\n    );\n}\n\nexport default Row;","import React from \"react\";\n\nfunction ScoreCounter(props) {\n    return (\n        <span>Score: {props.score} | Top Score: {props.highScore}</span>\n    );\n}\n\nexport default ScoreCounter;","import React from \"react\";\nimport \"./style.css\";\nimport ScoreCounter from \"../ScoreCounter\";\n\nfunction Navbar(props) {\n    return (\n      <header className=\"d-flex\">\n        <nav className=\"navbar navbar-expand-md navbar-light fixed-top nav-theme navbar-header row text-center justify-content-around text-white\">\n          <div className=\"col-4\">\n            <h2 className=\"col\"><a href=\"/\">Clicky Game</a></h2>\n          </div>\n          <div className=\"col-4\">\n            <h2 className=\"col\">{props.message}</h2>\n          </div>\n          <div className=\"col-4\">\n            <h2 className=\"col\"><ScoreCounter score={props.score} highScore={props.highScore}/></h2>\n          </div>\n        </nav>\n      </header>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid text-center mt-5\">\n        <h1 className=\"display-4\">Clicky Game!</h1>\n        <p className=\"lead\">\n          Click on an image to earn points, but don't click on any more than\n          once!\n        </p>\n      </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction GameCard(props) {\n    return (\n    <div className=\"col-6 col-sm-4 col-md-3 m-auto\" onClick={() => {props.isClicked(props.id)}}>\n        <img\n        className=\"card\"\n        alt={props.name}\n        src={props.image}\n        id={props.id}\n        />\n    </div>\n    );\n}\n\nexport default GameCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return (\n      <footer className=\"footer mt-5 pt-3 pb-1 footer-theme\">\n        <p className=\"pl-3\">\n          Clicky Game!\n            <img alt=\"React logo\" src=\"./favicon.ico\" className=\"footer-img\" />\n        </p>\n      </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport GameCard from \"./components/GameCard\";\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      score: 0,\n      highScore: 0,\n      message: \"Click any image to begin!\",\n      cards: this.getInitialCharacterSet()\n    };\n  }\n\n  getInitialCharacterSet() {\n    let initialState = {\n      cards: {}\n    };\n\n    return characters.map(character => {\n      return initialState.cards[character.id] = { clicked: false };\n    });\n  }\n\n  // Use Fisher-Yates Shuffle to randomize array output\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  isClicked = id => {\n    var currentStateCards = this.state.cards;\n    var newCardArr = [];\n\n    if (this.state.cards[id - 1].clicked) {\n      this.setState({message: \"Sorry, you guessed wrong!\"});\n      // TODO animation/modal for loss?\n      this.resetGame();\n    } else {\n      for (var i = 0; i < currentStateCards.length; i++) {\n        if (i === id - 1) {\n          var newState = {\n            clicked: true\n          };\n          currentStateCards[i] = newState;\n          newCardArr.push(currentStateCards[i]);\n        } else {\n          newCardArr.push(currentStateCards[i]);\n        }\n      }\n      this.setState({ cards: newCardArr, message: \"You guessed correctly!\" });\n      this.incrementScore();\n    }\n  };\n\n  incrementScore = () => {\n    this.setState({ score: this.state.score + 1 });\n    if (this.state.highScore <= this.state.score) {\n      this.setState({ highScore: this.state.highScore + 1 });\n    }\n    this.checkWin();\n  };\n\n  checkWin = () => {\n    if (this.state.score >= 11) {\n      alert(\"You win!\");\n      this.resetGame();\n    }\n  }\n\n  resetGame = () => {\n    this.setState({ score: 0, cards: this.getInitialCharacterSet() });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={this.state.score}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n        <Jumbotron />\n        <Container>\n          <Row>\n            {this.shuffle(characters).map(character => (\n              <GameCard\n                image={character.image}\n                key={character.id}\n                id={character.id}\n                name={character.name}\n                isClicked={this.isClicked}\n              />\n            ))}\n          </Row>\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}